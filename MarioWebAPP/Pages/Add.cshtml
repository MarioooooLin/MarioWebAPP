@page
@model MarioWebAPP.Pages.AddModel
@{
    ViewData["Title"] = "Add";
}
<div id="root">
    <div class="container">

        <div class="mt-3 fixed">
            <form class="px-4">
                <div class="Title"><h2>Create new account</h2></div>
                <div class="row">
                    <div class="form-group col-6">
                        <label for="Account">Account <span class="text-danger fw-bold">*</span></label>
                        <input type="email"
                               class="form-control"
                               id="account"
                               aria-describedby="emailHelp"
                               placeholder="Email"
                               v-model.trim="account"
                               name="account"
                               required                               />
                   
                    </div>
                    <div class="form-group col-6">
                        <label for="Password">Name <span class="text-danger fw-bold">*</span></label>
                        <input type="text"
                               class="form-control"
                               id="name"
                               placeholder="Name"
                               v-model.trim="name" 
                               required/>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-6">
                        <label for="">Country <span class="text-danger fw-bold">*</span></label>

                        <select name="Country" id="country" v-model="selectedCountry" class="d-block form-select" required>
                            <option value="" selected disabled>-Select-</option>
                            <option :value="cou" v-for="(cou, index) in country" :key="index">{{cou}}</option>
                        </select>


                        @*                        <selectcomponent v-model="countryIndex" :options="country" :value="countryIndex" class="d-block form-select"/>
                        *@
                    </div>
                    <div class="form-group col-6">
                        <label for="City">City <span class="text-danger fw-bold">*</span></label>

                        <select name="City" id="city" v-model="selectedCity" class="d-block form-select" required>
                            <option value="" selected disabled>-Select-</option>
                            <option :value="cit" v-for="(cit, index) in city" :key="index">{{cit}}</option>
                        </select>

                        @*                    <selectcomponent v-model="cityIndex" :options="cityOptions" :value="cityIndex" class="d-block form-select"/>
                        *@
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label for="">Gender</label>
                        <div class="d-flex">
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="gender"
                                       id="Male"
                                       v-model="gender"
                                       value="male" />
                                <label class="form-check-label mr-3" for="Male"> Male </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="gender"
                                       id="Female"
                                       v-model="gender"
                                       value="female" />
                                <label class="form-check-label" for="Female"> Female </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-6">
                        <!-- v-if處理 -->
                        <label for="Sales">Sales <span class="text-danger fw-bold">*</span></label>

                        <select name="Sales" id="sales" class="d-block form-select" v-model="selectedSales" @@change="addToSalesList" required>
                            <option selected disabled>-Select-</option>
                            <option :value="sa" v-for="(sa, index) in sales" :key="index" v-if="salesStatus">{{sa}}</option>
                        </select>

                        <ul class="d-inline-flex w-auto">
                            <li class="w-auto h-25 border border-dark mt-1 d-inline mr-2 font-weight-bold"
                                v-for="(sesa,index) in salesList"
                                :key="index">
                                {{index}} {{sesa}}
                                <button :click="removeSales()" class="btn btn-primary btn-sm">Remove</button>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="form-group border-primary">
                    <p>Your interested products:</p>
                    <div class="border h-auto p-2">
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="PRIME Series"
                                   id="1"
                                   value="PRIME Series"
                                   v-model="interested" /><label for="1" class="pl-1">PRIME Series</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="VERTEX Series"
                                   id="2"
                                   value="VERTEX Series"
                                   v-model="interested" /><label for="2" class="pl-1">VERTEX Series</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="FOCUS Series"
                                   id="3"
                                   value="FOCUS Series"
                                   v-model="interested" /><label for="3" class="pl-1">FOCUS Series</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="CORE Series"
                                   id="4"
                                   value="CORE Series"
                                   v-model="interested" /><label for="4" class="pl-1">CORE Series</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="S12III Series"
                                   id="5"
                                   value="S12III Series"
                                   v-model="interested" /><label for="5" class="pl-1">S12III Series</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="INDUSTRIAL"
                                   id="6"
                                   value="INDUSTRIAL"
                                   v-model="interested" /><label for="6" class="pl-1">INDUSTRIAL</label>
                        </span>
                        <span class="ml-3">
                            <input type="checkbox"
                                   name="Other"
                                   id="7"
                                   value="Other"
                                   v-model="interested" /><label for="7" class="pl-1">Other</label>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <p>Remark:</p>
                    <textarea name="remark"
                              id="remark"
                              cols="70"
                              rows="5"
                              class="form-control"
                              v-model="remark"></textarea>
                </div>

                <div class="form-group form-check"></div>
                <button type="submit" class="btn btn-primary mx-3">Submit</button>
                <button type="" class="btn btn-primary mx-3">Cancel</button>
            </form>
        </div>
    </div>
</div>
<script>

    const vm = Vue.createApp({
        data() {
            return {
                account: "",
                name: "",
                remark: "",
                gender: "",
                interested: [],
                country: "",
                city: "",
                sales: [],
                salesList: [],
                localRouter: "",
                selectedSales: "",
                selectedCountry: "",
                selectedCity: "",
                test: "",
                countryIndex: 2,
                cityIndex: 0,
                salesStatus: true,
                accountError:false,
                accountErrMsg:""
            };
        },
        async created() {
            this.localRouter = await window.location.pathname;
            console.log(this.localRouter);
            this.getSales();

        },

        mounted() {
            this.getCountry();
            //this.test1();
            //this.getCountryAndCity();
        },


        computed: {
            //country() {
            //      return country;
            //      console.log(this.country)
            //},
            //city() {
            //          //    return this.country[this.countryIndex].city;
            //        //},
            //        city() {
            //    if (this.country) {
            //        return this.country[this.countryIndex].city;
            //    }
            //    return [];
            //},
            //        cityOptions() {
            //              const city = this.city;
            //console.log(city);
            //                  const cities = proxyArray.map(item => item.city).flat();
            //console.log(cities);
            //return city.map(x=>{name:x});


        },
        //  components: {
        //      //selectcomponent
        //},
        watch: {
            selectedCountry(n, o) {
                if (n != "") {
                    this.getCity()
                    //async getCity() {
                    //    var _this = this;
                    //    let fd = new FormData();
                    //    //console.log(_this.country)
                    //    fd.append("country", n)
                    //    let result = await $axiosPost(this.localRouter + "?handler=GetCity", fd);
                    //    this.city = result;
                    //    console.log(this.city)
                    //console.log(n)

                    //console.log("aa")
                    //}
                }
            },
            account: function () {
            var isMail = /^\w+((-\w+)|(\.\w+))*\@@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z]+$/;
            if (!isMail.test(this.email)) {
                this.emailError = true;
                this.emailErrMsg = 'email格式錯誤';
            }
            else {
                this.emailError = false;
            }
        }
        },



        methods: {
            removeSales() {
                Array.prototype.remove = function (value) {
                    var index = this.indexOf(value);
                    if (index !== -1) {
                        this.splice(index, 1);
                    }
                }
                var arr = this.salesList;
                var item = this.index;
                console.log(this.index)

                arr.remove(item);
                console.log(arr)
            },


            submit() {
                if (this.country == "" || this.city == "" || this.account == "" || this.name == "" || this.salesList.length == 0) {
                    alert("請完成紅星部分")
                } else {

                }
            },
            cancel() {
                document.getElementById("account").innerHTML = "";
                document.getElementById("name").innerHTML = "";
                document.getElementById("remark").innerHTML = "";
                this.data.interested = [];
            },
            async getSales() {
                var _this = this;
                let result = await $axiosPost(this.localRouter + "?handler=GetSales");
                this.sales = result;
                //  console.log(result);
                //  console.log(this.sales)
            },
            async getCountry() {
                var _this = this;
                let result = await $axiosPost(this.localRouter + "?handler=GetCountry");
                this.country = result;
                // console.log(this.country)
            },
            async getCity() {
                var _this = this;
                let fd = new FormData();
                fd.append("country", _this.selectedCountry)
                let result = await $axiosPost(this.localRouter + "?handler=GetCity", fd);
                this.city = result;
                //console.log(this.city)
            },

            async test1() {
                var _this = this;
                let result = await $axiosPost(this.localRouter + "?handler=GetCountryCity");
                this.city = result;
                //console.log(this.city)
            },
            async getCountryAndCity() {
                //await this.getCountry();
                // await this.getCity();
            },
            addToSalesList() {
                this.salesList.push(this.selectedSales);
                console.log(this.selectedSales)
            },
            //checkSales() {
            //    console.log(this.salesList.includes(sa))
            //},
            checkedSales() {
                //console.log(this.selectedSales)
                this.salesStatus = this.salesList.includes(this.selectedSales)
                console.log(salesStatus);
            }

        },
    });
    vm.mount("#root");


</script>

